{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactItem/ContactItem.module.scss","App.module.scss","components/Filter/Filter.module.scss","components/ContactList/ContactList.module.scss","components/ContactForm/ContactForm.jsx","components/ContactItem/ContacItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","inputHandler","e","currentTarget","value","className","s","form","autoComplete","uniqueId","uuid","preventDefault","id","formLabel","formInput","type","pattern","required","onChange","formBtn","ContactItem","contact","onRemoveContact","listItem","listItemText","listItemButton","onClick","ContactList","contacts","contactList","map","Filter","onFilter","filterLabel","filterInput","App","setContacts","filter","setFilter","useEffect","storedContacts","JSON","parse","localStorage","getItem","setItem","stringify","container","mainTitle","data","find","toLowerCase","alert","prev","contactsToDelete","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45c58be9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"ContactForm_formInput__1NpGR\",\"formLabel\":\"ContactForm_formLabel__ukkVd\",\"formBtn\":\"ContactForm_formBtn__JIMFQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactItem_listItem__brXKx\",\"listItemText\":\"ContactItem_listItemText__28Fsv\",\"listItemButton\":\"ContactItem_listItemButton__3AiZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2_OIH\",\"mainTitle\":\"App_mainTitle__3x54P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1AblI\",\"filterInput\":\"Filter_filterInput__10Dff\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2b8r5\"};","import { useState } from 'react';\r\nimport s from './ContactForm.module.scss';\r\nimport { v4 as uuid } from 'uuid';\r\nexport default function ContactForm({ onSubmit }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const formHandler = e => {\r\n        const uniqueId = uuid();\r\n        e.preventDefault();\r\n        setName('');\r\n        setNumber('');\r\n        onSubmit({ name: name, number: number, id: uniqueId });\r\n    };\r\n    const inputHandler = e => {\r\n        const { name, value } = e.currentTarget;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className={s.form} autoComplete=\"off\" onSubmit={formHandler}>\r\n            <span className={s.formLabel}>\r\n                Name\r\n                <br />\r\n                <input\r\n                    className={s.formInput}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    value={name}\r\n                    required\r\n                    onChange={inputHandler}\r\n                />\r\n            </span>\r\n            <br />\r\n            <span className={s.formLabel}>\r\n                Number\r\n                <br />\r\n                <input\r\n                    className={s.formInput}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    value={number}\r\n                    onChange={inputHandler}\r\n                    required\r\n                />\r\n            </span>\r\n            <br />\r\n            <button type=\"submit\" className={s.formBtn}>\r\n                Add contact\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactItem.module.scss';\r\n\r\nfunction ContactItem({ contact, onRemoveContact }) {\r\n    return (\r\n        <li className={s.listItem}>\r\n            <p className={s.listItemText}>\r\n                {contact.name} : {contact.number}\r\n            </p>\r\n            <button\r\n                className={s.listItemButton}\r\n                type=\"button\"\r\n                onClick={() => onRemoveContact(contact.id)}\r\n            >\r\n                Delete\r\n            </button>\r\n        </li>\r\n    );\r\n}\r\n\r\nContactItem.propTypes = {\r\n    contact: PropTypes.object,\r\n    onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.scss';\r\nimport ContactItem from '../ContactItem/ContacItem';\r\n\r\nfunction ContactList({ contacts, onRemoveContact }) {\r\n    return (\r\n        <ul className={s.contactList}>\r\n            {contacts.map(contact => (\r\n                <ContactItem\r\n                    key={contact.id}\r\n                    contact={contact}\r\n                    onRemoveContact={onRemoveContact}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n    onRemoveContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.scss';\r\n\r\nfunction Filter({ value, onFilter }) {\r\n    return (\r\n        <form>\r\n            <span className={s.filterLabel}>\r\n                Find contacts by name\r\n                <br />\r\n                <input\r\n                    className={s.filterInput}\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={onFilter}\r\n                />\r\n            </span>\r\n        </form>\r\n    );\r\n}\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nimport s from './App.module.scss';\nimport { useEffect, useState } from 'react';\nexport default function App() {\n    const [contacts, setContacts] = useState([]);\n    const [filter, setFilter] = useState('');\n    useEffect(() => {\n        const storedContacts = JSON.parse(localStorage.getItem('contacts'));\n        if (storedContacts) {\n            setContacts(storedContacts);\n        } else {\n            return;\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('contacts', JSON.stringify(contacts));\n    }, [contacts]);\n\n    const handleSubmit = data => {\n        if (\n            contacts.find(\n                contact =>\n                    contact.name.toLowerCase() === data.name.toLowerCase(),\n            )\n        ) {\n            alert(`${data.name} is already in contacts`);\n            return;\n        } else {\n            setContacts(prev => [...prev, data]);\n        }\n    };\n\n    const removeContact = id => {\n        const contactsToDelete = contacts.filter(contact => contact.id !== id);\n        setContacts(contactsToDelete);\n    };\n\n    const changeFilter = e => {\n        const { value } = e.currentTarget;\n        setFilter(value);\n    };\n\n    const getFilteredContacts = () => {\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\n        );\n    };\n\n    return (\n        <div className={s.container}>\n            <h1 className={s.mainTitle}>Phonebook</h1>\n\n            <ContactForm onSubmit={handleSubmit} />\n\n            <h2 className={s.mainTitle}>Contacts</h2>\n            <Filter value={filter} onFilter={changeFilter} />\n            <ContactList\n                onRemoveContact={removeContact}\n                contacts={getFilteredContacts()}\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}